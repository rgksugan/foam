{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/2 Areas/Technology/permissions-policy","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Permissions Policy\"), mdx(\"p\", null, \"When you embed other web pages into your page through Iframe, it is necessary to take steps to prevent unnecessary/unwanted actions from the embedded page. Permissions policy provides an option to provide/restrict browser features to these embedded pages.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.chrome.com/docs/privacy-sandbox/permissions-policy/\"\n  }, \"https://developer.chrome.com/docs/privacy-sandbox/permissions-policy/\")), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Iframe\",\n    \"title\": \"Iframe\"\n  }, \"[[Iframe]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Chrome\",\n    \"title\": \"Chrome\"\n  }, \"[[Chrome]]\"), \"\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Browser\",\n    \"title\": \"Browser\"\n  }, \"[[Browser]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#permissions-policy","title":"Permissions Policy"}]},"outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/2 Areas/Technology/permissions-policy","title":"Permissions Policy"}}},"pageContext":{"id":"e1c28467-8134-5f0c-90fa-7864e84f8069","refWordMdxSlugDict":{},"tocTypes":["sidebar"]}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}