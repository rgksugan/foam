{"componentChunkName":"component---node-modules-gatsby-theme-kb-src-templates-topic-js","path":"/3-resources/books/The-Phoenix-Project","result":{"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"tags\": \"fiction\",\n  \"type\": \"book\",\n  \"author\": \"Gene Kim, Kevin Behr and George Spafford\",\n  \"title\": \"The Phoenix Project\",\n  \"sub-title\": \"A Novel about IT, DevOps, and Helping Your Business Win\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"The Phoenix Project\"), mdx(\"p\", null, \"by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Gene-Kim\",\n    \"title\": \"Gene Kim\"\n  }, \"[[Gene Kim]]\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Kevin-Behr\",\n    \"title\": \"Kevin Behr\"\n  }, \"[[Kevin Behr]]\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/George-Spafford\",\n    \"title\": \"George Spafford\"\n  }, \"[[George Spafford]]\"), \"\"), mdx(\"h2\", null, \"Highlights\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Perfection is the enemy of good.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Your job as VP of IT Operations is to ensure the fast, predictable, and uninterrupted flow of planned work that delivers value to the business while minimizing the impact and disruption of unplanned work, so you can provide stable, predictable, and secure IT service.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Any improvement made after the bottleneck is useless, because it will always remain starved, waiting for work from the bottleneck. And any improvements made before the bottleneck merely results in more inventory piling up at the bottleneck. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../mental-models/theory-of-constraints\",\n    \"title\": \"theory-of-constraints\"\n  }, \"[[theory-of-constraints]]\"), \"\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I smirk at the reference to smoke tests, a term circuit designers use. The saying goes, \\u201CIf you turn the circuit board on and no smoke comes out, it\\u2019ll probably work.\\u201D\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Remember, unplanned work kills your ability to do planned work, so you must always do whatever it takes to eradicate it.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Being able to take needless work out of the system is more important than being able to put more work into the system.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"We pay you to think, not just do!\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Features are always a gamble. If you\\u2019re lucky, ten percent will get the desired benefits. So the faster you can get those features to market and test them, the better off you\\u2019ll be.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201CIf you can\\u2019t out-experiment and beat your competitors in time to market and agility, you are sunk.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"If an organization doesn\\u2019t pay down its technical debt, every calorie in the organization can be spent just paying interest, in the form of unplanned work.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Every work center is made up of four things: the machine, the man, the method, and the measures.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Resilience engineering tells us that we should routinely inject faults into the system, doing them frequently, to make them less painful.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Because if you are not improving, entropy guarantees that you are actually getting worse.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Studies have shown that practicing five minutes daily is better than practicing once a week for three hours.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Practice creates habits, and habits create mastery of any process or skill. Whether it\\u2019s calisthenics, sports training, playing a musical instrument, or in my experience, the endless drilling we did in the Marines. Repetition, especially for things that require teamwork, creates trust and transparency.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Improving daily work is even more important than doing daily work.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Every industry and company that is not bringing software to the core of their business will be disrupted.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"In ten years, I\\u2019m certain every coo worth their salt will have come from IT. Any coo who doesn\\u2019t intimately understand the it systems that actually run the business is just an empty suit, relying on someone else to do their job.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"When IT fails, the business fails. It stands to reason that if it is organized so that IT can win, the business wins, too.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"IT is not merely a department. Instead, it\\u2019s pervasive, like electricity. It\\u2019s a skill, like being able to read or do math. Here at Parts Unlimited, we don\\u2019t have a centralized reading or math department\\u2014we expect everyone we hire to have some mastery of it. Understanding what technology can and can\\u2019t do has become a core competency that every part of this business must have. If any of my business managers are leading a team or a project without that skill, they will fail.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A dysfunctional marriage assumes that the business and IT are two separate entities. IT should either be embedded into business operations or into the business.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I\\u2019ve also come across otherwise smart people who are of the mistaken belief that if they hold on to a task, something only they know how to do, it\\u2019ll ensure job security. These people are knowledge Hoarders. This doesn\\u2019t work. Everyone is replaceable. No matter how talented they are. Sure it may take longer at first to find out how to do that special task, but it will happen without them.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"I need each and every one of my business managers to take calculated risks, without jeopardizing the entire enterprise. People everywhere in the business are using technology, so it\\u2019s like the Wild West again\\u2014for better or for worse. Businesses that can\\u2019t learn to compete in this new world will perish.\")), mdx(\"h2\", null, \"The Book in 3 Sentences\"), mdx(\"p\", null, \"Novel about IT work in a corporate.\"), mdx(\"h2\", null, \"Who Should Read It?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Anyone in IT\")), mdx(\"h2\", null, \"Bibliography\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Five Dysfunctions of a Team\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Goal\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuous Delivery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Lean Startup\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The DevOps Handbook\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"The Phoenix Project","private":false},"tableOfContents":{"items":[{"url":"#the-phoenix-project","title":"The Phoenix Project","items":[{"url":"#highlights","title":"Highlights"},{"url":"#the-book-in-3-sentences","title":"The Book in 3 Sentences"},{"url":"#who-should-read-it","title":"Who Should Read It?"},{"url":"#bibliography","title":"Bibliography"}]}]},"outboundReferences":[{"contextLine":"> Any improvement made after the bottleneck is useless, because it will always remain starved, waiting for work from the bottleneck. And any improvements made before the bottleneck merely results in more inventory piling up at the bottleneck. [[theory-of-constraints]]","targetAnchor":null,"refWord":"theory-of-constraints","label":null,"target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Theory of Constraints\"), mdx(\"p\", null, \"The core concept of the Theory of Constraints is that every process has a single constraint and that total process throughput can only be improved when the constraint is improved. A very important corollary to this is that spending time optimizing non-constraints will not provide significant benefits; only improvements to the constraint will further the goal (achieving more profit).\"), mdx(\"p\", null, \"Thus, TOC seeks to provide precise and sustained focus on improving the current constraint until it no longer limits throughput, at which point the focus moves to the next constraint. The underlying power of TOC flows from its ability to generate a tremendously strong focus towards a single goal (profit) and to removing the principal impediment (the constraint) to achieving more of that goal.\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"4c4071a3-a22c-58e4-a7cf-4394de4c5849","fields":{"slug":"/3-resources/mental-models/theory-of-constraints","title":"Theory of Constraints"}}}}],"inboundReferences":[]},"fields":{"slug":"/3-resources/books/The-Phoenix-Project","title":"The Phoenix Project"}}},"pageContext":{"id":"c209e89b-969e-5815-9674-0457f93c32bb","refWordMdxSlugDict":{"theory-of-constraints":"3-resources/mental-models/theory-of-constraints"},"tocTypes":["sidebar"]}},"staticQueryHashes":["2221750479","2380733210","2768355698","63159454","847517413"]}